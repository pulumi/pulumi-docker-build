// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DockerBuild.Inputs
{

    public sealed class CacheToLocalArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The compression type to use.
        /// </summary>
        [Input("compression")]
        public Input<Pulumi.DockerBuild.CompressionType>? Compression { get; set; }

        /// <summary>
        /// Compression level from 0 to 22.
        /// </summary>
        [Input("compressionLevel")]
        public Input<int>? CompressionLevel { get; set; }

        /// <summary>
        /// Path of the local directory to export the cache.
        /// </summary>
        [Input("dest", required: true)]
        public Input<string> Dest { get; set; } = null!;

        /// <summary>
        /// Forcefully apply compression.
        /// </summary>
        [Input("forceCompression")]
        public Input<bool>? ForceCompression { get; set; }

        /// <summary>
        /// Ignore errors caused by failed cache exports.
        /// </summary>
        [Input("ignoreError")]
        public Input<bool>? IgnoreError { get; set; }

        /// <summary>
        /// The cache mode to use. Defaults to `min`.
        /// </summary>
        [Input("mode")]
        public Input<Pulumi.DockerBuild.CacheMode>? Mode { get; set; }

        public CacheToLocalArgs()
        {
            Compression = Pulumi.DockerBuild.CompressionType.Gzip;
            CompressionLevel = 0;
            ForceCompression = false;
            IgnoreError = false;
            Mode = Pulumi.DockerBuild.CacheMode.Min;
        }
        public static new CacheToLocalArgs Empty => new CacheToLocalArgs();
    }
}
