// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Dockerbuild.Outputs
{

    [OutputType]
    public sealed class CacheToLocal
    {
        /// <summary>
        /// The compression type to use.
        /// </summary>
        public readonly Pulumi.Dockerbuild.CompressionType? Compression;
        /// <summary>
        /// Compression level from 0 to 22.
        /// </summary>
        public readonly int? CompressionLevel;
        /// <summary>
        /// Path of the local directory to export the cache.
        /// </summary>
        public readonly string Dest;
        /// <summary>
        /// Forcefully apply compression.
        /// </summary>
        public readonly bool? ForceCompression;
        /// <summary>
        /// Ignore errors caused by failed cache exports.
        /// </summary>
        public readonly bool? IgnoreError;
        /// <summary>
        /// The cache mode to use. Defaults to `min`.
        /// </summary>
        public readonly Pulumi.Dockerbuild.CacheMode? Mode;

        [OutputConstructor]
        private CacheToLocal(
            Pulumi.Dockerbuild.CompressionType? compression,

            int? compressionLevel,

            string dest,

            bool? forceCompression,

            bool? ignoreError,

            Pulumi.Dockerbuild.CacheMode? mode)
        {
            Compression = compression;
            CompressionLevel = compressionLevel;
            Dest = dest;
            ForceCompression = forceCompression;
            IgnoreError = ignoreError;
            Mode = mode;
        }
    }
}
