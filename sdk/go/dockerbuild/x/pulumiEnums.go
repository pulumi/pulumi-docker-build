// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dockerbuild

type CacheMode string

const (
	// Only layers that are exported into the resulting image are cached.
	CacheModeCacheModeMin = CacheMode("min")
	// All layers are cached, even those of intermediate steps.
	CacheModeCacheModeMax = CacheMode("max")
)

type CompressionType string

const (
	// Use `gzip` for compression.
	CompressionTypeCompressionTypeGzip = CompressionType("gzip")
	// Use `estargz` for compression.
	CompressionTypeCompressionTypeEstargz = CompressionType("estargz")
	// Use `zstd` for compression.
	CompressionTypeCompressionTypeZstd = CompressionType("zstd")
)

type NetworkMode string

const (
	// The default sandbox network mode.
	NetworkModeNetworkModeDefault = NetworkMode("default")
	// Host network mode.
	NetworkModeNetworkModeHost = NetworkMode("host")
	// Disable network access.
	NetworkModeNetworkModeNone = NetworkMode("none")
)

type Platform string

const (
	Platform_Platform_Darwin_386      = Platform("darwin/386")
	Platform_Platform_Darwin_amd64    = Platform("darwin/amd64")
	Platform_Platform_Darwin_arm      = Platform("darwin/arm")
	Platform_Platform_Darwin_arm64    = Platform("darwin/arm64")
	Platform_Platform_Dragonfly_amd64 = Platform("dragonfly/amd64")
	Platform_Platform_Freebsd_386     = Platform("freebsd/386")
	Platform_Platform_Freebsd_amd64   = Platform("freebsd/amd64")
	Platform_Platform_Freebsd_arm     = Platform("freebsd/arm")
	Platform_Platform_Linux_386       = Platform("linux/386")
	Platform_Platform_Linux_amd64     = Platform("linux/amd64")
	Platform_Platform_Linux_arm       = Platform("linux/arm")
	Platform_Platform_Linux_arm64     = Platform("linux/arm64")
	Platform_Platform_Linux_mips64    = Platform("linux/mips64")
	Platform_Platform_Linux_mips64le  = Platform("linux/mips64le")
	Platform_Platform_Linux_ppc64le   = Platform("linux/ppc64le")
	Platform_Platform_Linux_riscv64   = Platform("linux/riscv64")
	Platform_Platform_Linux_s390x     = Platform("linux/s390x")
	Platform_Platform_Netbsd_386      = Platform("netbsd/386")
	Platform_Platform_Netbsd_amd64    = Platform("netbsd/amd64")
	Platform_Platform_Netbsd_arm      = Platform("netbsd/arm")
	Platform_Platform_Openbsd_386     = Platform("openbsd/386")
	Platform_Platform_Openbsd_amd64   = Platform("openbsd/amd64")
	Platform_Platform_Openbsd_arm     = Platform("openbsd/arm")
	Platform_Platform_Plan9_386       = Platform("plan9/386")
	Platform_Platform_Plan9_amd64     = Platform("plan9/amd64")
	Platform_Platform_Solaris_amd64   = Platform("solaris/amd64")
	Platform_Platform_Windows_386     = Platform("windows/386")
	Platform_Platform_Windows_amd64   = Platform("windows/amd64")
)
